plugins {
    id 'scala'
    id 'application'
    id 'com.github.alisiikh.scalastyle' version '3.5.0'
    id 'com.github.maiflai.scalatest' version '0.32'
}

repositories {
    mavenCentral()
}

group 'org.tihana'
version '1.0.0'

dependencies {
    implementation 'org.scala-lang:scala-library:2.11.12'
    implementation 'org.scala-lang:scala-compiler:2.11.12'
    implementation 'org.scala-lang:scala-reflect:2.11.12'
    implementation 'ch.qos.logback:logback-classic:1.4.11'

    testImplementation 'org.scalatest:scalatest_2.11:3.2.17'
    testRuntimeOnly 'com.vladsch.flexmark:flexmark-all:0.62.2'
}

scalastyle {
    scalaVersion = '2.11'
    scalastyleVersion = '1.5.1'
    config = file('scalastyle_config.xml')
    failOnWarning = true
    verbose = false
    quiet = false
}

test {
    maxParallelForks = 1
    maxParallelForks = 1
    outputs.upToDateWhen { false }
    testLogging {
        events 'passed', 'skipped', 'failed'
        exceptionFormat = 'full'
        showStandardStreams = true
    }
}

application {
    mainClass = 'org.tihana.Solution'
}

defaultTasks 'clean', 'scalastyleCheck', 'test'
